<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:h="http://java.sun.com/jsf/html" xmlns:f="http://java.sun.com/jsf/core"
  xmlns:b="http://bootsfaces.net/ui" xmlns:ui="http://java.sun.com/jsf/facelets" xmlns:ng="http://xmlns.jcp.org/jsf/passthrough"
  xmlns:ac="http://beyondjava.net/angularFacesCore">

<h:head>
  <meta charset="utf-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
  <title>AngularFaces 2.1 documentation</title>
  <meta name="author" content="Stephan Rauh, http://www.beyondjava.net"></meta>
</h:head>
<h:body style="padding-top: 60px">
  <ui:composition template="/template/pageTemplate.xhtml">
    <ui:define name="content">
      <div id="mandelbrot" style="width: 300px; height: 300px; position: absolute; top: 100px; left: 0px; margin: 0 30px 0 0;">
        <img src="globe/MandelbrotEarth1.png" width="100%" height="100%" />
      </div>

      <h:form ng:name="myform">
        <b:container>
          <b:row>
            <b:column span="6">
              <b:panel title="AngularFaces demos" look="primary" contentStyle="height:200px">
        	    The AngularFaces project aims to combine the expressiveness of JSF with the simplicity and power of AngularJS.
              	This showcase collects a couple of demos:
                <ul>
                  <li><a href="/showcase2.0/carshop/index.jsf">Car dealer demo</a></li>
                  <li><a href="/tetris/index.jsf">Tetris demo running on BootsFaces + AngularFaces</a></li>
                </ul>
                <br />
              </b:panel>
            </b:column>
            <b:column span="6">
              <b:panel title="BabbagesFaces" look="primary" contentStyle="height:200px">
    
        		BabbageFaces shrinks the size of the AJAX responses generated by Mojarra 2.2+ and PrimeFaces 5+ applications.
    			Customers suffering from a slow connection will notice the effect.
    			The general idea is, you don't need to replace the entire HTML page for small changes. Plus, it's not
                the developer's task to figuere out the changes. Leave it to BabbageFaces. It knows some tricks you
                can't do yourself.
            	<ul>
                  <li><a href="/babbageFaces">BabbageFaces demo</a></li>
                </ul>
              </b:panel>  
            </b:column>
          </b:row>
          <b:row>
            <b:column span="6">
              <b:panel title="AngularFaces 2.1 documentation" look="primary" contentStyle="height:200px">
              </b:panel>
            </b:column>
            <b:column span="6">
              <b:panel title="AngularFaces 2.0 documentation" look="primary" contentStyle="height:200px" >
                  <a href="version2.0/index.html">Documentation of the previous version</a>
              </b:panel>  
            </b:column>
          </b:row>
          <b:row>
            <b:column span="6">
              <b:panel title="BootsFaces" look="primary" contentStyle="height:200px" style="height:200px">
                <p>
                BootsFaces combines rock-solid JSF with the fancy Bootstrap look and feel. It can be 
                used stand-alone, but it's also a natural companion to AngularFaces and PrimeFaces. For instance,
                the page you're viewing is a JSF page running on BootsFaces, AngularFaces and OmniFaces.
                </p>
                <p>Check out the <a target="#" href="http://www.bootsfaces.net">BootsFaces showcase!</a></p> 
              </b:panel>
            </b:column>
          </b:row>
          
        </b:container>


        <br />
        <h:messages />
      </h:form>
      <h:outputScript library="threejs" name="three.js" target="head" />
      <h:outputScript library="threejs" name="drawMandelbrotGlobe.js" target="head" />
      <script type="text/javascript">
              if (navigator.userAgent.match(/Chrome/i)) {
                activateGlobeDemo();
              }
              if (navigator.userAgent.match(/Firefox/i)) {
                activateGlobeDemo();
              }
            </script>
    </ui:define>
  </ui:composition>
</h:body>
</html>
