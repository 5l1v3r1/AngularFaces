<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html>
<ui:fragment xmlns="http://www.w3.org/1999/xhtml" xmlns:h="http://java.sun.com/jsf/html" xmlns:f="http://java.sun.com/jsf/core"
  xmlns:b="http://bootsfaces.net/ui" xmlns:ui="http://java.sun.com/jsf/facelets" xmlns:ng="http://xmlns.jcp.org/jsf/passthrough"
  xmlns:ac="http://beyondjava.net/angularFacesCore">

  <b:row>
    <b:column span="6">
      <b:panel title="AngularFaces Demos" look="primary" contentStyle="height:350px">
        AngularFaces verbindet das Beste aus zwei Welten: die Java Server Faces und AngularJS.
        In diesem Showcase finden Sie einige Demos:
        <ul>
          <li><a href="/showcase2.1/carshop/index.jsf">Autohändler Demo</a></li>
          <li><a href="/tetris/index.jsf">Das Tetris Demo zeigt BootsFaces und AngularFaces.</a></li>
        </ul>
        
        Bei der Einführung von AngularFaces 2.0 wurde die alte API über Bord geworfen. Trotzdem mag der
        AngularFaces-1.0-Showcase interessant sein, und sei es nur aus historischen Gründen:
        <ul>
          <li><a href="/showcase1.0/index.jsf">Die alten AngularFaces 1.0 Demos</a></li>
        </ul>
        <br />
      </b:panel>
    </b:column>
    <b:column span="6">
      <b:panel title="BabbageFaces" look="primary" contentStyle="height:350px">
        JSF ist geschwätzig. Wenn man genau hinschaut, werden viel zu viele Daten über die Leitung geschickt.
        BabbageFaces reduziert die AJAX-Responses auf das Wesentliche. Besonders bei langsamen
        Internetverbindungen (z.B. UMTS) werden Ihre Anwender den Unterschied merken.<p />
        Als Entwickler brauchen Sie nicht selber herausfinden,
        welche IDs aktualisiert werden müssen. Überlassen Sie das BabbageFaces. Es kennt ohnehin
        einige Optimierungen, die JSF-Programmieren nicht offenstehen.<p />
        BabbageFaces ist mit Mojarra 2.2+ und PrimeFaces 5+ kompatibel.<p />
        <ul>
          <li><a href="/babbageFaces">BabbageFaces Demo</a></li>
        </ul>
      </b:panel>
    </b:column>
  </b:row>
  <b:row>
    <b:column span="6">
      <b:panel title="AngularFaces 2.1 Dokumentation" look="primary" contentStyle="height:100px">
        <p>
          Hier geht es zum interaktivem <a href="version2.1/step_00/index.jsf">AngularFaces 2.1-Handbuch.</a>.
        </p>
      </b:panel>
    </b:column>
    <b:column span="6">
      <b:panel title="AngularFaces 2.0 Dokumentation" look="primary" contentStyle="height:100px">
        Dokumentation der <a href="version2.0/index.html">Vorgängerversion AngularFaces 2.0.</a>
      </b:panel>
    </b:column>
  </b:row>
  <b:row>
    <b:column span="6">
      <b:panel title="BootsFaces" look="primary" contentStyle="height:200px" style="height:280px">
        <p>BootsFaces kombiniert den grundsoliden und bewährten Ansatz von JSF mit dem Chic von Bootstrap.</p>
        <p>Sie können es als eigenständiges JSF-Framework verwenden. Alternativ passt es sehr gut zu
        AngularFaces und PrimeFaces. Die Seite, die Sie gerade lesen, zeigt das sehr gut: sie verwendet
        gleichzeitig BootsFaces, AngularFaces und OmniFaces.
        </p>
        <p>
          Auf zum <a target="#" href="http://www.bootsfaces.net">BootsFaces Showcase!</a>
        </p>
      </b:panel>
    </b:column>
  </b:row>
</ui:fragment>
