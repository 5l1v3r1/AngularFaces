<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" 
      xmlns:h="http://java.sun.com/jsf/html" 
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:b="http://bootsfaces.net/ui" 
      xmlns:ui="http://java.sun.com/jsf/facelets" 
      xmlns:ng="http://xmlns.jcp.org/jsf/passthrough"
      xmlns:ac="http://beyondjava.net/angularFacesCore">

<h:body>
  <ui:fragment>
<script type="syntaxhighlighter" class="brush: xml; toolbar: false;first-line: 0">
<![CDATA[
  	<div ng-app="DiceApp" ng-cloak="ng-cloak" >
  	    <div>
  	    	<p>This demo contains two different AngularJS controllers. That's a common situation - just think of modal dialogs.</p>
  	    	<p>The beans don't do much. They simply return random numbers. What makes them interesting is that the random numbers
  	    	belong to two different AngularJS controllers. Note that as of AngularFaces 2.1.7, both AngularJS controllers contain
  	    	all the values of both JSF beans. Each AngularJS controller also contains the JSF bean variable of the other AngularJS
  	    	controller. That's a bug that needs to be fixed, but in most cases it shouldn't be a problem to you.</p>
			<b:panelGrid colSpans="6,6" id="angular">  	    
		    	<div ng-controller="Dice1Controller" angularJSFile="dice.js">
		    		<ngsync value="&num;{dice1}" direction="serverToClient" />
		    		<b:panelGrid colSpans="12">
			    		<p>The first dice shows {{dice1.value}}.</p>
			    		<b:commandButton look="primary" action="&num;{dice1.throwDice}" value="Throw dice" update="angular" ajax="true"/>
		    		</b:panelGrid>
	  			</div>
		    	<div ng-controller="Dice2Controller" angularJSFile="none" >
		    		<ngsync value="&num;{dice2}" direction="serverToClient" /> 
		    		<b:panelGrid colSpans="12">
			    		<p>The second dice shows {{dice2.value}}.</p>
			    		<b:commandButton look="primary" action="&num;{dice2.throwDice}" value="Throw dice" update="angular" ajax="true"/>
		    		</b:panelGrid>
	  			</div>
  			</b:panelGrid>
  		</div>
	 </div>
]]>
</script>
  </ui:fragment>
</h:body>
</html>


