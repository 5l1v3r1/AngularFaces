<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" 
      xmlns:h="http://java.sun.com/jsf/html" 
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:b="http://bootsfaces.net/ui" 
      xmlns:ui="http://java.sun.com/jsf/facelets" 
      xmlns:ng="http://xmlns.jcp.org/jsf/passthrough"
      xmlns:ac="http://beyondjava.net/angularFacesCore">

<h:body>
  <ui:fragment>
  <div>
  	<div ng-app="DiceApp" ng-cloak="ng-cloak" >
  	    <div id="angular">
  	    	<p>This demo contains two different AngularJS controllers. That's a common situation - just think of modal dialogs.</p>
  	    	<p>The beans don't do much. They simply return random numbers.</p>
  	    
	    	<div ng-controller="Dice1Controller" angularJSFile="dice.js">
	    		<h:inputText value="{{dice1.value}}"></h:inputText>
	    		<b:panelGrid colSpans="12">
		    		<p>The first dice shows {{dice1.value}}.</p>
		    		<b:commandButton look="primary" action="#{dice1.throwDice}" value="Throw dice" update="angular" ajax="true"/>
	    		</b:panelGrid>
  			</div>
	    	<div ng-controller="Dice2Controller" angularJSFile="none">
	    		<ngsync value="#{dice2}" direction="serverToClient" /> 
	    		<b:panelGrid colSpans="12">
	    		<h:inputText value="{{dice2.value}}"></h:inputText>
		    		<p>The seconds dice shows {{dice2.value}}.</p>
		    		<b:commandButton look="primary" action="#{dice2.throwDice}" value="Throw dice" update="angular" ajax="true"/>
	    		</b:panelGrid>
  			</div>
  		</div>
	 </div>
  </div>
  </ui:fragment>
</h:body>
</html>


