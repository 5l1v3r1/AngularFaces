<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" 
      xmlns:h="http://java.sun.com/jsf/html" 
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:b="http://bootsfaces.net/ui" 
      xmlns:ui="http://java.sun.com/jsf/facelets" 
      xmlns:ng="http://xmlns.jcp.org/jsf/passthrough"
      xmlns:jsf="http://xmlns.jcp.org/jsf"
      xmlns:ac="http://beyondjava.net/angularFacesCore">

<h:head> </h:head>
<h:body >
  <ui:composition template="../../menu/index.xhtml">
    <ui:define name="content">
	        <section>
	          <b:tabView>
	            <b:tab title="live demo">
					<div id="angular">
						<h2>Welcome to AngularFaces 2.0!</h2>
				    		Based firmly in the future...<br />
						<h:panelGroup colspan="2" header="{{calculatorBean.headerText}}"
							style="{{calculatorBean.gridStyle}}" ng-app="AngularFacesExamples" ng-cloak="ng-cloak"
							ng-controller="MyCtrl">
							<h:form id="myForm" style="font-weight:normal">
				    		    <ac:updateModelAfterAJAXRequest />
								<p>This demo uses traditional JSF 2.2 components.</p>
								
								<h:panelGrid columns="3"  style="font-weight:normal">
									<h:inputText value="{{calculatorBean.number1}}" label="number1" ng:integer="" />
									<h:inputText value="{{calculatorBean.number2}}" ng:integer="" />
									<h:inputText value="{{calculatorBean.result}}"
										label="#{calculatorBean.resultCaption}" />
									<h:inputText value="{{calculatorBean.serverSideResult}}" />
									<h:inputText value="{{calculatorBean.randomNumberFromServer}}" />
									<h:commandButton value="Add on server (via AJAX)" 
										action="#{calculatorBean.add}">
										<f:ajax render="angular" execute="@form" />
									</h:commandButton>
									<h:commandButton value="Add on server (without AJAX)"
										action="#{calculatorBean.add}" />
									<h:commandButton value="Add on server (via JSF-AJAX)"
										action="#{calculatorBean.add}">
										<f:ajax render="@form" execute="@form" />
									</h:commandButton>
								</h:panelGrid>
								<h:messages globalOnly="false" />
							</h:form>
						</h:panelGroup>
				    </div>
	           </b:tab>
	            <b:tab title="JSF markup">
<script type="syntaxhighlighter" class="brush: xml; toolbar: false;first-line: 0">
<![CDATA[
					<div id="angular">
						<h2>Welcome to AngularFaces 2.0!</h2>
				    		Based firmly in the future...<br />
						<h:panelGroup colspan="2" header="{{calculatorBean.headerText}}"
							style="{{calculatorBean.gridStyle}}" ng-app="AngularFacesExamples" ng-cloak="ng-cloak"
							ng-controller="MyCtrl">
							<h:form id="myForm" style="font-weight:normal">
				    		    <ac:updateModelAfterAJAXRequest />
								<p>This demo uses traditional JSF 2.2 components.</p>
								
								<h:panelGrid columns="3"  style="font-weight:normal">
									<h:inputText value="{{calculatorBean.number1}}" label="number1" ng:integer="" />
									<h:inputText value="{{calculatorBean.number2}}" ng:integer="" />
									<h:inputText value="{{calculatorBean.result}}"
										label="&num;{calculatorBean.resultCaption}" />
									<h:inputText value="{{calculatorBean.serverSideResult}}" />
									<h:inputText value="{{calculatorBean.randomNumberFromServer}}" />
									<h:commandButton value="Add on server (via AJAX)" 
										action="&num;{calculatorBean.add}">
										<f:ajax render="angular" execute="@form" />
									</h:commandButton>
									<h:commandButton value="Add on server (without AJAX)"
										action="&num;{calculatorBean.add}" />
									<h:commandButton value="Add on server (via JSF-AJAX)"
										action="&num;{calculatorBean.add}">
										<f:ajax render="@form" execute="@form" />
									</h:commandButton>
								</h:panelGrid>
								<h:messages globalOnly="false" />
							</h:form>
						</h:panelGroup>
				    </div>
]]>
</script>
	           </b:tab>
	        </b:tabView>
	        </section>
	        <br />
	        <h:messages />
    </ui:define>
  </ui:composition>
</h:body>
</html>
