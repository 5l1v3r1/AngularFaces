<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" 
      xmlns:h="http://java.sun.com/jsf/html" 
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:b="http://bootsfaces.net/ui" 
      xmlns:ui="http://java.sun.com/jsf/facelets" 
      xmlns:ng="http://xmlns.jcp.org/jsf/passthrough"
      xmlns:jsf="http://xmlns.jcp.org/jsf"
      xmlns:ac="http://beyondjava.net/angularFacesCore">

<h:head> </h:head>
<h:body >
  <ui:composition template="../../menu/index.xhtml">
    <ui:define name="content">
	  <div ng-app="AngularFacesExamples" ng-controller="MyCtrl" id="angular" ng-cloak="ng-cloak">
	  <h:panelGroup id="someId"></h:panelGroup>
		<h:form id="myForm">
	        <section>
	          <b:tabView>
	            <b:tab title="live demo">
				    <ac:updateModelAfterAJAXRequest />
					<h2><h:outputText value="Welcome to AngularFaces 2.0!" /></h2>
		    		<translate>Based firmly in the future...</translate><br />
		    		<hr />
		    		<h:panelGroup colspan="2" header="{{calculatorBean.headerText}}" >
						<br />
						<h:outputText value="This demo uses the new JSF 2.2 HTML5 style to define the components." />
						<h:panelGrid columns="3">
							<input type="number" jsf:value="{{calculatorBean.number1}}" />
							<input type="number" jsf:value="{{calculatorBean.number2}}" />
							<input type="number" jsf:value="{{calculatorBean.result}}"
								label="#{calculatorBean.resultCaption}" />
							<input type="number"
								jsf:value="{{calculatorBean.serverSideResult}}" />
							<input type="number"
								jsf:value="{{calculatorBean.randomNumberFromServer}}" />
							<h:commandButton value="Add on server (AF AJAX)" 
								action="#{calculatorBean.add}">
								<f:ajax render="angular" execute="@form" />
							</h:commandButton>
							<h:commandButton value="Add on server (JSF AJAX)"
								action="#{calculatorBean.add}">
								<f:ajax render="@form" execute="@form" />
							</h:commandButton>
							<h:commandButton value="Add on server (without AJAX)" 
								action="#{calculatorBean.add}" />
						</h:panelGrid>
						<br />
						<p><b>Note on the example:</b></p>
						<p>The update region is only a part of the DOM tree controlled by AngularJS.<br />
						As a consequence, the server may change bean values during an AJAX request.<br />
						When the HTML DOM tree is updated, the AngularJS model still has the old values,<br />
						which aren't valid any more. To fix this, add &lt;ac:updateModelAfterAJAXRequest /&gt; to the form.</p> 
						<h:messages globalOnly="false" />
					</h:panelGroup>
	           </b:tab>
	            <b:tab title="JSF markup">
<script type="syntaxhighlighter" class="brush: xml; toolbar: false;first-line: 0">
<![CDATA[
]]>
</script>
	           </b:tab>
	        </b:tabView>
	        </section>
	        <br />
	        <h:messages />
	      </h:form>
	    </div>
    </ui:define>
  </ui:composition>
</h:body>
</html>
