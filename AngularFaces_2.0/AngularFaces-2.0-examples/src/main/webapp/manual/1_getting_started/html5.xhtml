<f:view xmlns="http://www.w3.org/1999/xhtml"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://xmlns.jcp.org/jsf/html"
	xmlns:jsf="http://xmlns.jcp.org/jsf"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:ng="http://xmlns.jcp.org/jsf/passthrough">
	<h:head>
		<style>.ui-state-error-text { color: #cd0a0a; } 
		       .ui-state-error { color: #cd0a0a; }
		</style>
	</h:head>
	<h:body id="angular">
		<h:form id="myForm" ng-app="AngularFacesExamples" ng-controller="MyCtrl">
			<h2>Welcome to AngularFaces 2.0!</h2>
    		Based firmly in the future...<br />
    		<hr />
    		<h:panelGroup colspan="2" header="{{calculatorBean.headerText}}"
				style="{{calculatorBean.gridStyle}}">
				<br />
				This demo uses the new JSF 2.2 HTML5 style to define the components.
				<h:panelGrid columns="3">
					<input type="number" jsf:value="{{calculatorBean.number1}}" />
					<input type="number" jsf:value="{{calculatorBean.number2}}" />
					<input type="number" jsf:value="{{calculatorBean.result}}"
						label="#{calculatorBean.resultCaption}" />
					<input type="number"
						jsf:value="{{calculatorBean.serverSideResult}}" />
					<input type="number"
						jsf:value="{{calculatorBean.randomNumberFromServer}}" />
					<h:commandButton value="Add on server (AF AJAX)"
						action="#{calculatorBean.add}">
						<f:ajax render="angular" execute="@form" />
					</h:commandButton>
					<h:commandButton value="Add on server (JSF AJAX)"
						action="#{calculatorBean.add}" onclick="reactivateAngularJS=true; return true;">
						<f:ajax render="myForm" execute="@form" />
					</h:commandButton>
					<h:commandButton value="Add on server (without AJAX)"
						action="#{calculatorBean.add}" />
				</h:panelGrid>
				Note that AngularJS doesn't recover after traditional AJAX requests. The PrimeFaces version of this JSF view doesn't have that problem.
				<h:messages globalOnly="false" />
			</h:panelGroup>
		</h:form>
	</h:body>
</f:view>
